************************************************************
*                      Start qmmm.inp                      *
************************************************************
* Docking the ligand into the protein, with qmmm (no grid)
*

set currligand 1

! First check if FF parameters are defined for link atom
if covalent .eq. true then
 if @?qmlink .eq. 0 goto qmmm_error
 if @?liglink1 .eq. 0 goto qmmm_error
endif

! Read topology and parameter files
!stream @strDIR/top_prm.str

! Read protein
!stream @strDIR/read_protein.str

! Read cofactors
!if @cofactor .eq. true then stream @strDIR/generate_cofactors.str

!set currligand 1

label qmmm_loop

   goto write_qmmm_dat
   label after_write_qmmm_dat

   !set NumObject ?nres

!   if ?qchem .eq. 1 then
!      set 0 @qmcharge@@currligand
!      !system "../scripts/write_qchem_inp.py @0"
!      system "../scripts/python_wrapper.sh ../scripts/write_qchem_inp.py @0"
!   endif

   ! Reads in a new ligand
   bomlev -1
   open unit 31 read form name @topDIR/ligand_@currligand.str
   if ?iostat .ne. -1 then
      stream unit 31
   else
     ! This is a critical warning
     echo EnzyDock WARNING: Ligand rtf/prm file not found.
     ! Update readable log file
!     open append unit 33 form name enzydock.log
     write title unit 33
* EnzyDock WARNING: Ligand rtf/prm file not found.
* Terminating EnzyDock run...
*
     close unit 33
     stop
   endif
   bomlev @bomblevel

   ! Read minimum ligand structure
   bomlev -1
   open unit 1 form read name @psfDIR/all_mm_mindock_@currligand.psf
   read psf card unit 1 !append
   close unit 1
   bomlev @bomblevel

   open read unit 1 form name @resDIR/all_mm_mindock_@currligand.crd
   read coor card unit 1 !offset @NumObject
   close unit 1

   ! If charge not defined, detect here
   if @?{qmcharge@@currligand} .eq. 0 then
      coor dipole sele segi ligand_@currligand end
      set @qmcharge@@currligand ?charge
   endif

   if ?qchem .eq. 1 then
      set 0 qmcharge@currligand
      !system "../scripts/write_qchem_inp.py @0"
      close unit 33
      system "../scripts/python_wrapper.sh ../scripts/write_qchem_inp.py @0"
      open append unit 33 form name enzydock.log
   ! RS: avoid problems with change in number of atoms
   else
      if @nchange .eq. true goto nc_natom_error
   endif

   ! Read flexible part of protein that was modified in MM minimization
   ! Overwrites existing coordinates.
   !if @flexibledocking .eq. true then
   !   open read unit 1 form name @resDIR/flex_mm_mindock_@currligand.crd
   !   read coor card unit 1 !offset @NumObject
   !   close unit 1
   !endif

   !print coor

   ! Remove restraints for final QM/MM minimization

   ! RS - moved from below ->
   define ligand sele segid ligand_@currligand @debugshow end
   set c 1
   define cofactors sele none end
   label read_qcofactors
      define cofactors sele cofactors .or. segi COF@c @debugshow end
      incr c
   if c .le. @numcofactor goto read_qcofactors
   ! <- RS - moved from below

   ! RS (1 line) - check with LepI - before back_flex.str
   !stream @strDIR/clear_restraints.str

   define QMS sele segid ligand_@currligand @debugshow end

   ! Moved here   
   open unit 31 read form name @strDIR/useqmmm.str
   stream unit 31

   stream @strDIR/clear_restraints.str

   if @flexibledocking .eq. true then
      define flex sele none end
      set b 1
      label define_qflex_loop1
        if @numflex@@b .lt. 1 goto skip_define_qflex_loop1
         set c 1
         label define_qflex_loop2
            define flex sele flex .or. segi pep@b .and. (resi @flex@@b@@c) @debugshow end
            incr c
         if c .le. @numflex@@b goto define_qflex_loop2
        label skip_define_qflex_loop1
        incr b
      if b .le. @proteinunit goto define_qflex_loop1

      if @flexibledocking .eq. true then
         !define back sele segi FLX* .and. (type N .or. type C .or. type O .or. type CA -
         !        .or. type HN .or. type HA .or. type HA2) @debugshow end
         define back sele flex .and. (type N .or. type C .or. type O .or. type CA -
                 .or. type HN .or. type HA .or. type HA2) @debugshow end
 !        define back sele type N .or. type C .or. type O .or. type CA .or. type HN .or. type HA end
         define flexx sele flex .and. .not. back @debugshow end
         ! Backbone atoms are not flexible unless specifically defined as flexible
 !        define back sele type N .or. type C .or. type O .or. type CA .or. type HN .or. type HA end
      endif

      ! If backbone atoms are flexible
      if flexibleback .eq. true then
         !open unit 31 read form name @strDIR/back_flex.str
         ! RS:
         open unit 31 read form name @strDIR/back_flex_ng.str
         stream unit 31
         define back sele back .and. .not. fback end
      endif

      ! Define flexible region
      define flexx sele flex .and. .not. back @debugshow end

   endif
  ! RS - move earlier ->
!   define ligand sele segid ligand_@currligand @debugshow end
!   set c 1
!   define cofactors sele none end
!   label read_qcofactors
!      define cofactors sele cofactors .or. segi COF@c @debugshow end
!      incr c
!   if c .le. @numcofactor goto read_qcofactors
  ! <- RS - move earlier

   !cons harm clear 
   if @flexibledocking .eq. true then
      cons fix sele .not. (QMS .or. cofactors .or. flexx) end
   else
      cons fix sele .not. (QMS .or. cofactors) end
   endif
   ! If minimization radius is set, do minimization of nearby residues as well
   ! This definition overrides earlier fixes
   if @minradius .gt. 0.0 then
      define flexradius sele .byres. (ligand .or. (ligand .around. @minradius)) @debugshow end
      if ?nsel .gt. 0 then
         cons fix sele .not. flexradius end
      if ?nsel .gt. 0 then
   endif
   !noe 
   !   reset
   !end

   ! DTM: Moved up
   !open unit 31 read form name @strDIR/useqmmm.str
   !stream unit 31
 
   ! Do QM/MM minimization, allow continuation even if SCF not fully converged
   bomlev -1
   ! Update readable log file
!   open append unit 33 form name enzydock.log
   write title unit 33
* Performing QM/MM minimization of minimum energy pose mindock
*    of ligand_@currligand inside protein
*
!   close unit 33

   mini sd   nstep @qmstep nprint @qmprint
   mini powe nstep @qmstep nprint @qmprint
   mini abnr nstep @qmstep nprint @qmprint
   bomlev @bomblevel

   if ?qchem .eq. 1 then
      set evdw ?vdw
   else
      set evdw ?qmvd
   endif

   open write unit 1 form name @resDIR/lig_qmmm_mindock_@currligand.crd
   write coor card unit 1 sele QMS @debugshow end
   *  qmel:  QM/MM electrostatic energy
   *  qmvdw: QM/MM vdW energy
   *  qmel     qmvdw    
   * ================
   *  ?qmel    @evdw
   *

   open unit 1 form write name @resDIR/lig_qmmm_mindock_@currligand.pdb
   write coor pdb unit 1 sele QMS @debugshow end
   *  qmel:  QM/MM electrostatic energy 
   *  qmvdw: QM/MM vdW energy
   *  qmel     qmvdw  
   * ================
   *  ?qmel    @evdw
   *
   close unit 1

   open write unit 1 form name @psfDIR/all_qmmm_mindock_@currligand.psf
   write psf card unit 1
   close unit 1

   open write unit 1 form name @resDIR/all_qmmm_mindock_@currligand.crd
   write coor card unit 1

   open unit 1 form write name @resDIR/all_qmmm_mindock_@currligand.pdb
   write coor pdb unit 1
   close unit 1

   if @flexibledocking .eq. true then

      if @numcofactor .gt. 0 then
         open write unit 1 form name @resDIR/lig_co_flex_qmmm_mindock_@currligand.crd
         write coor card unit 1 sele ligand .or. cofactors .or. flex @debugshow end

         open unit 1 form write name @resDIR/lig_co_flex_qmmm_mindock_@currligand.pdb
         write coor pdb unit 1 sele ligand .or. cofactors .or. flex @debugshow end
         close unit 1
      endif

      open write unit 1 form name @resDIR/lig_flex_qmmm_mindock_@currligand.crd
      write coor card unit 1 sele QMS .or. flex @debugshow end

      open unit 1 form write name @resDIR/lig_flex_qmmm_mindock_@currligand.pdb
      write coor pdb unit 1 sele QMS .or. flex @debugshow end
      close unit 1

      open write unit 1 form name @resDIR/flex_qmmm_mindock_@currligand.crd
      write coor card unit 1 sele flex @debugshow end

      open unit 1 form write name @resDIR/flex_qmmm_mindock_@currligand.pdb
      write coor pdb unit 1 sele flex @debugshow end
      close unit 1

   endif

   if @numcofactor .gt. 0 then
      open write unit 1 form name @resDIR/lig_co_qmmm_mindock_@currligand.crd
      write coor card unit 1 sele ligand .or. cofactors @debugshow end

      open unit 1 form write name @resDIR/lig_co_qmmm_mindock_@currligand.pdb
      write coor pdb unit 1 sele ligand .or. cofactors @debugshow end
      close unit 1
   endif

   !print coor

   incr currligand

   dele atoms sele all end

if currligand .le. @lastinter goto qmmm_loop

return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                  START WRITE_DAT
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
label write_qmmm_dat

    ! Starts writing the output summary file
    open write unit 3 form name @resDIR/@currligand_summary_qmmm_@runid.dat
    write title unit 3
**
*  Summary for ligand number @currligand
*  qm/mm(tot): qm/mm potential energy
*  qm/mm(elstat): electrostatic part of qm/mm energy
*  qm/mm(vdw): vdw part of qm/mm energy
*  clustiter: cluster number
*  currligand: @currligand
*  runid: @runid
*  qm/mm(tot)     qm/mm(elstat)     qm/mm(vdw)     clustmiter
* ============================================================
* 

goto after_write_qmmm_dat
                                                                                                                                      497,5         Bot
label qmmm_error
   echo EnzyDock WARNING: Missing parameters for QM/MM... skipping
   ! Update readable log file
!   open append unit 33 form name enzydock.log
   write title unit 33
* EnzyDock WARNING: Missing parameters for QM/MM... skipping
*
!   close unit 33
   
label nc_natom_error
   echo EnzyDock WARNING: Number of atoms differs between ligands... skipping
   echo EnzyDock WARNING: In future CHARMM implementations it might be OK
   ! Update readable log file
!   open append unit 33 form name enzydock.log
   write title unit 33
* EnzyDock WARNING: Number of atoms differs between ligands... skipping
* EnzyDock WARNING: In future CHARMM implementations it might be OK
*
!   close unit 33

return

